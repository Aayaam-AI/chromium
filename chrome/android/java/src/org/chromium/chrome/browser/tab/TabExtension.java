// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package org.chromium.chrome.browser.tab;

import android.support.annotation.StringDef;

import org.chromium.chrome.browser.tasks.SummaryTracker;

import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.nio.ByteBuffer;

/**
 * Interface for associating extra functionality with tabs and allowing
 * extension state to be persisted/restored with normal tab state. Add any new implementations as a
 * new {@link TabExtensionType} below.
 */
public interface TabExtension {
    /**
     * A list of all TabExtension implementations.
     */
    @StringDef({TabExtensionType.TAB_SUMMARY})
    @Retention(RetentionPolicy.SOURCE)
    @interface TabExtensionType {
        /**
         * An extension that saves meta data on what was viewed within the Tab's history entries.
         */
        String TAB_SUMMARY = "SummaryTracker.TabSummary";
    }

    /**
     * Create a TabExtension of given type, restored from the given state.
     * @param type The type of {@link TabExtension} to return;
     * @return
     */
    static TabExtension restoreTabExtension(String type, ByteBuffer state) {
        TabExtension newExtension;
        if (type.equals(TabExtensionType.TAB_SUMMARY)) {
            newExtension = new SummaryTracker.TabSummary();
        } else {
            return null;
        }
        newExtension.restoreFromByteBuffer(state);
        return newExtension;
    }

    @TabExtensionType
    String getType();

    /**
     * Restores extension state stored in buffer that was generated by
     * saveToByteBuffer().
     */
    void restoreFromByteBuffer(ByteBuffer buffer);

    /**
     * Creates a ByteBuffer containing extension state that we want to
     * persisted with other tab state.
     */
    ByteBuffer saveToByteBuffer();

    /**
     * Notifies this object that the Tab is being destroyed.
     *
     * All references to the Tab and related objects should be cleared inside
     * this method.
     */
    void onTabDestroy();
}
